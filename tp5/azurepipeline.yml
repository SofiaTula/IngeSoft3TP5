# -------------------- STAGE 2: DEPLOY QA --------------------
- stage: Deploy_QA
  displayName: "CD: Desplegar QA + Configurar Entorno"
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployQA
    environment: 'QA'
    strategy:
      runOnce:
        deploy:
          steps:
            # ---- Backend ----
            - task: DownloadPipelineArtifact@2
              inputs:
                artifact: 'backend-code'
                path: '$(Pipeline.Workspace)/backend-source' 

            - task: AzureWebApp@1
              displayName: "Deploy Backend QA"
              inputs:
                azureSubscription: '$(azureServiceConnection)'
                appName: '$(backendAppNameQA)'
                package: '$(Pipeline.Workspace)/backend-source'
                runtimeStack: 'NODE|18-lts'
                startUpCommand: 'npm install && npm start'

            # ---- Configurar MongoDB en Backend QA ----
            - task: AzureCLI@2
              displayName: 'Configurar MONGODB_URI en Backend QA'
              inputs:
                azureSubscription: '$(azureServiceConnection)'
                scriptType: 'bash'
                scriptLocation: 'inlineScript'
                inlineScript: |
                  BACKEND_APP='$(backendAppNameQA)'
                  RG='$(RESOURCE_GROUP_NAME)'
                  MONGO_URI='$(MONGODB_URI)'
                  
                  echo "➡️ Configurando MongoDB en $BACKEND_APP"
                  
                  # Validar que la variable existe
                  if [ -z "$MONGO_URI" ]; then
                    echo "❌ ERROR: MONGODB_URI no está definida"
                    exit 1
                  fi
                  
                  # Configurar app setting
                  az webapp config appsettings set \
                    --name "$BACKEND_APP" \
                    --resource-group "$RG" \
                    --settings MONGODB_URI="$MONGO_URI"
                  
                  echo "✅ MongoDB URI configurada correctamente"

            # ---- Frontend ----
            - task: DownloadPipelineArtifact@2
              inputs:
                artifact: 'frontend-code'
                path: '$(Pipeline.Workspace)/frontend-source'

            - task: AzureWebApp@1
              displayName: "Deploy Frontend QA"
              inputs:
                azureSubscription: '$(azureServiceConnection)'
                appName: '$(frontendAppNameQA)'
                package: '$(Pipeline.Workspace)/frontend-source'
                runtimeStack: 'NODE|18-lts'
                startUpCommand: 'npm install && npm start'

            # ---- Configuración QA ----
            - task: AzureCLI@2
              displayName: 'Configurar BACKEND_URL en Frontend QA'
              inputs:
                azureSubscription: '$(azureServiceConnection)'
                scriptType: 'bash'
                scriptLocation: 'inlineScript'
                inlineScript: |
                  BACKEND_URL_VAL="https://coffehub-backend-qa-g7d7aehuf3avgucz.brazilsouth-01.azurewebsites.net"
                  FRONTEND_APP='$(frontendAppNameQA)'
                  RG='$(RESOURCE_GROUP_NAME)'
                  
                  echo "➡️ Configurando BACKEND_URL en $FRONTEND_APP"
                  
                  az webapp config appsettings set \
                    --name "$FRONTEND_APP" \
                    --resource-group "$RG" \
                    --settings BACKEND_URL="$BACKEND_URL_VAL"
                  
                  echo "✅ BACKEND_URL configurada"

            - task: AzureCLI@2
              displayName: 'Configurar CORS en Backend QA'
              inputs:
                azureSubscription: '$(azureServiceConnection)'
                scriptType: 'bash'
                scriptLocation: 'inlineScript'
                inlineScript: |
                  FRONTEND_URL_VAL="https://coffehub-front-qa-a5cvgbfkhbf7huep.brazilsouth-01.azurewebsites.net"
                  BACKEND_APP='$(backendAppNameQA)'
                  RG='$(RESOURCE_GROUP_NAME)'
                  
                  echo "➡️ Configurando CORS para $FRONTEND_URL_VAL"
                  
                  az webapp cors add \
                    --name "$BACKEND_APP" \
                    --resource-group "$RG" \
                    --allowed-origins "$FRONTEND_URL_VAL"
                  
                  echo "✅ CORS configurado"